function [belt,outputArg2] = readBeltCaimNikonMeta(path_name,file_name)
%READBELTCAIMNIKONMETA First part of Martin Pofahl's readcaim function.
%

%% Load recorded belt data by LV
% Get pathanme if not given or if data is not found

if nargin == 0
    [file_name,path_name] = uigetfile('*.txt','Choose belt time stamp file');   
end
if nargin < 1 || ~exist([path_name file_name '.txt'],'file')
    [file_name,path_name] = uigetfile('*.txt','Choose belt data file',path_name);
    file_name = file_name(1:end-4);
end
disp(['Reading ' path_name file_name])

belt = importdata([path_name file_name '.txt']);

%% Load timestamps recorded by LV 

if ~exist([path_name file_name 'time.txt'],'file')
    [file_name,path_name] = uigetfile('*.txt','Choose belt time stamp file',path_name);
    stmps = importdata([path_name file_name]);
    file_name = file_name(1:end-8);
else
    stmps = importdata([path_name file_name 'time.txt']);
end

%% Load timestamps recorded by NIS E

if ~exist([path_name file_name 'nik.txt'],'file')
    [file_name,path_name] = uigetfile('*.txt','Choose nikon time stamp file',path_name);
    file_name = file_name(1:end-7);
end

nik = importdata([path_name file_name 'nik.txt']);
nik = nik.data;

% Delete Artifact that sometimes occurs...
if isnan(nik(end,end))  
    nik = nik(1:end-1,:);
end

% if realtime correction ist currupted, figure it out here
if nik(2,2) == 0.1
    disp('Realtime correction is NIS Elements has been corrupted')
    nik = nik(:,3)*1000;
else
    nik = nik(:,2)*1000;
end

disp(['NIS Elements recorded frames: ' num2str(length(nik))])
   

end

